plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8' // asciidoctor plugin
	id 'java'
}

group = 'com.upvote'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets")) // 문서 저장위치
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.google.code.gson:gson:2.8.8'
	implementation 'com.google.api-client:google-api-client:1.31.5'
	implementation 'org.jetbrains:annotations:20.1.0'
	implementation "com.querydsl:querydsl-core:4.4.0"
	implementation "com.querydsl:querydsl-jpa:4.4.0"
	implementation "javax.xml.bind:jaxb-api"
	implementation "io.jsonwebtoken:jjwt-api:0.11.2"
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
	implementation 'org.springframework.boot:spring-boot-test-autoconfigure:2.5.3'

	runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.2"
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	implementation 'commons-io:commons-io:2.6'

	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

	compileOnly "joda-time:joda-time:2.2"
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.springframework.boot:spring-boot-starter-oauth2-client'
	compileOnly "com.fasterxml.jackson.core:jackson-databind:2.9.4"
	compileOnly 'org.springframework.boot:spring-boot-starter-aop'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // mock용
	testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient' // webtestclient용

	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:4.4.0:jpa",
			'org.projectlombok:lombok'
	)
}

test {
	outputs.dir snippetsDir // 선언한 디렉토리에 생성
	useJUnitPlatform()
}

asciidoctor {
	attributes 'snippets': snippetsDir // adoc 파일 생성시 올바르게 include하기 위함
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") { // gradle은 src/docs/asciidoc 에 메인 adoc생성!
		into 'static/docs' // asciidoctor로 만든 문서는 static/docs 디렉토리로.!
	}
}

task copyDocument(type: Copy) { // 생성된 docs 파일을 build시 static 아래에 docs로 복사!
	dependsOn bootJar

	from file("build/asciidoc/html5/")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument // build시 copy 실행
}

apply plugin: 'idea'

// For Deploy Jar File
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'

