server.port=8888

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true
# 콘솔에 출력된 SQL 문을 보기 좋게 만들어 준다.
spring.jpa.properties.hibernate.format_sql = true
# 콘솔에 출력된 SQL 문에 ? 처리된걸 보여준다.
logging.level.org.hibernate.SQL = debug
logging.level.org.hibernate.type.descriptor.sql = trace


# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update


# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 설정
spring.datasource.url=jdbc:mysql://141.164.62.192:3940/aism?useUnicode=true&characterEncoding=utf8&verifyServerCertificate=false&useSSL=false&serverTimezone=Asia/Seoul
spring.datasource.username=AISM
spring.datasource.password=**Qlsrlarkd8271
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.h2.console.enabled=true


#spring:
#    devtools:
#        remote:
#            restart:
#                enabled: true
#    thymeleaf:
#        cache: false
#            prefix: file:src/main/resources/templates/
<<<<<<< HEAD
#


#spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8&verifyServerCertificate=false&useSSL=false&serverTimezone=Asia/Seoul
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect


spring:
    devtools:
        remote:
            restart:
                enabled: true
=======
#
>>>>>>> BaekGyu
